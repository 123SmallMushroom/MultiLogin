###################################
#       MultiLogin
#              --config
###################################

# 存放所有的Yggdrasil验证服务器，
services:

  # 节点名称为插件标记名称，一旦设置请谨慎修改。
  # 该标记作为识别用户的验证服务器，为系统标记。胡乱更改会导致系统无法验证用户身份。
  # 您可以仿写此节点用来添加新的Yggdrasil验证服务器。
  # 该节点表示Minecraft正版验证
  official:

    # 启用该验证服务器
    # 关闭将拒绝所有使用该验证登入的玩家登入游戏
    enable: false

    # 验证服务器的别称，可随意修改。
    # 必填，不允许为空字符串。
    name: "正版"

    # 验证服务器地址。
    # 必填，不允许为空字符串，URL末尾不需要'/'。
    url: "https://sessionserver.mojang.com/session/minecraft"

    # 是否使用”https://github.com/yushijinhun/authlib-injector/wiki/Yggdrasil-服务端技术规范“来检查一个链接是否有效
    checkUrl: false

    # 当某名玩家首次在此节点所设置的验证服务器中验证通过后，游戏内的UUID会按照此节点所填写的规则来生成
    # 目前只支持以下值:
    #   DEFAULT   -使用Yggdrasil验证服务器提供的UUID
    #   OFFLINE   -自动生成离线UUID（盗版UUID）
    # 所有生成的结果均会保存到数据库相应位置中。
    # 该值的优先级低于数据库所保存的值。
    # 请谨慎设置和修改该节点，避免增加日后维护的心智负担。
    # 必填，不允许为无效的值。
    # 为避免触发Paper端的某些机制，强烈建议此值为 DEFAULT
    convUuid: DEFAULT

    # 是否为当前验证服务器单独设置白名单。
    # 当某名玩家使用此节点所设置的验证服务器验证通过后，将会检查他是否具有登入到此服务器的白名单权限。
    # 当全局白名单生效时，此节点无效。
    whitelist: true

    # 以post请求方式验证账户身份
    # 绝大多数下，Yggdrasil服务器都使用GET请求方式验证用户数据的，
    # 如果你不了解当前Yggdrasil验证流程的话，请勿擅自修改它
    postMode: false

    # 不对URL进行自动补充，
    # 若此Yggdrasil验证服务器的最终链接并不是以’/sessionserver/session/minecraft/hasJoined?username=%s&serverId=%s%s‘结尾的.
    # 请将此值设置为true，并将完整的验证链接填入节点url中（不带hasJoined?username=%s&serverId=%s%s）
    noUrlDeal: true

    # 自定义head内容
    # 若此Yggdrasil验证服务器的最终链接参数头部分并不是’hasJoined?‘而是’hasJoinserver?‘或其他值，请将该值填入此节点中
    head: "hasJoined?"

  # 节点名称为插件标记名称，一旦设置请谨慎修改。
  # 该标记作为识别用户的验证服务器，为系统标记。胡乱更改会导致系统无法验证用户身份。
  # 您可以仿写此节点用来添加新的Yggdrasil验证服务器。
  # 该节点表示LittleSkin的Yggdrasil验证
  littleSkin:

    # 启用该验证服务器
    # 关闭将拒绝所有使用该验证登入的玩家登入游戏
    enable: false

    # 验证服务器的别称，可随意修改。
    # 必填，不允许为空字符串。
    name: "LS皮肤站"

    # 验证服务器地址。
    # 必填，不允许为空字符串，URL末尾不需要'/'。
    url: "https://mcskin.littleservice.cn/api/yggdrasil"

    # 是否使用”https://github.com/yushijinhun/authlib-injector/wiki/Yggdrasil-服务端技术规范“来检查一个链接是否有效
    checkUrl: true

    # 当某名玩家首次在此节点所设置的验证服务器中验证通过后，游戏内的UUID会按照此节点所填写的规则来生成
    # 目前只支持以下值:
    #   DEFAULT   -使用Yggdrasil验证服务器提供的UUID
    #   OFFLINE   -自动生成离线UUID（盗版UUID）
    # 所有生成的结果均会保存到数据库相应值中。
    # 该值的优先级低于数据库所保存的值。
    # 请谨慎设置和修改该节点，避免增加日后维护的心智负担。
    # 必填，不允许为无效的值。
    # 为避免触发Paper端的某些机制，强烈建议此值为 DEFAULT
    convUuid: DEFAULT

    # 是否为当前验证服务器单独设置白名单。
    # 当某名玩家使用此节点所设置的验证服务器验证通过后，将会检查他是否具有登入到此服务器的白名单权限。
    # 当全局白名单生效时，此节点无效。
    whitelist: true

    # 以post请求方式验证账户身份
    # 绝大多数下，Yggdrasil服务器都使用GET请求方式验证用户数据的，
    # 如果你不了解当前Yggdrasil验证流程的话，请勿擅自修改它
    postMode: false

    # 不对URL进行自动补充，
    # 若此Yggdrasil验证服务器的最终链接并不是以’/sessionserver/session/minecraft/hasJoined?username=%s&serverId=%s%s‘结尾的.
    # 请将此值设置为true，并将完整的验证链接填入节点url中（不带hasJoined?username=%s&serverId=%s%s）
    noUrlDeal: false

    # 自定义head内容
    # 若此Yggdrasil验证服务器的最终链接参数头部分并不是’hasJoined?‘而是’hasJoinserver?‘或其他值，请将该值填入此节点中
    head: "hasJoined?"

# 通过此节点下定义的验证服务器验证的玩家都将跳过账户重名检查，
# 并且强制下线在线的同名账户。
# 请不要轻易修改此节点，可能会导致一些莫名其妙的错误。
safeId: ""

# 设置验证服务器超时时间
servicesTimeOut: 7000

# 全局白名单开关
whitelist: true

# 插件数据的存放方式
sql:

  # 数据库类型: H2(默认), MYSQL
  backend: 'H2'

  # 数据库地址
  ip: '127.0.0.1'

  # 数据库端口
  port: '3306'

  # 数据库用户名
  username: 'root'

  # 数据库密码
  password: '12345'

  # 数据库名称
  database: 'multilogin'

##############
#   Message
##############

msgNoAdopt: "§c验证未能通过，请重试"
msgNoChae: "§c您只能通过指定的验证方式登入游戏"
msgRushName: "§c您的ID已被抢注，请重新设置您的ID"
msgRushNameOnl: "§c请重新设置您的ID！"

msgNoWhitelist: "§c您没有登入到此服务器的白名单权限"
msgNoPermission: "§c你没有权限使用这条指令"
msgInvCmd: "§c无效的命令"
msgAddWhitelist: "§a已将%s添加至白名单"
msgAddWhitelistAlready: "§c请勿重复将%s添加至白名单"
msgDelWhitelistInGame: "§c管理员已移除您的白名单权限"
msgDelWhitelist: "§a已移除%s的白名单"
msgDelWhitelistAlready: "§c%s并不在白名单中"
msgOpenWhitelist: "§a已开启白名单"
msgOpenWhitelistAlready: "§c请勿重复开启白名单"
msgCloseWhitelist: "§a已关闭白名单"
msgCloseWhitelistAlready: "§c请勿重复关闭白名单"

msgYDQuery: "§f玩家 §e%s §f使用的登入方式为 §e%s"
msgYDQueryNoRel: "§c没有查询到记录: %s"

msgReload: "§a已重新加载配置文件"
msgNoPlayer: "§c你不是一名实体玩家"
